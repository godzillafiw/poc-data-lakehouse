version: "3.7"
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: es01
    hostname: es01
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - 9200:9200
    networks:
      - trino-ranger-demo
    volumes:
    - ranger-es-data:/usr/share/elasticsearch/data

  postgresql:
    image: postgres:13
    container_name: psql01
    hostname: psql01
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5432:5432
    networks:
      - trino-ranger-demo
    volumes:
    - ranger-pg-data:/var/lib/postgresql/data

  ranger-admin:
    image: godzillafiw/ranger-admin:2.1.0
    container_name: ranger-admin
    hostname: ranger-admin
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 6G
        reservations:
          cpus: '1'
          memory: 5G
    ports:
      - 6080:6080
    networks:
      - trino-ranger-demo
    volumes:
      - ./ranger/admin/install.properties:/opt/ranger-admin/install.properties
      - ./ranger/admin/run.sh:/run.sh
    depends_on:
      - postgresql
      - elasticsearch

  mariadb:
    image: mariadb:10.11.2
    hostname: mariadb
    ports:
      - '3306:3306'
    env_file:
      - .env
    networks:
      - trino-ranger-demo
    volumes:
      - mariadb-data:/var/lib/mysql

  hive-metastore:
    # image: godzillafiw/hive-metastore:3.0.0
    image: bitsondatadev/hive-metastore:latest
    hostname: hive-metastore
    ports:
      - '9083:9083' # Metastore Thrift
    volumes:
      - ./hive-metastore/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mariadb
    depends_on:
      - mariadb
    networks:
      - trino-ranger-demo

  trino:
    image: godzillafiw/trino:406
    hostname: trino
    user: root
    container_name: trino
    networks:
      - trino-ranger-demo
    volumes:
      - ./trino/conf/trino/catalog:/etc/trino/catalog
      - ./trino/conf/trino/config.properties:/etc/trino/config.properties
      - ./trino/conf/trino/jvm.conf:/etc/trino/jvm.conf
      - ./trino/conf/trino/node.propeties:/etc/trino/cnode.propeties
      - ./trino/conf/ranger/install.properties:/opt/ranger/ranger-3.0.0-SNAPSHOT-trino-plugin-405-406/install.properties
      - ./trino/run.sh:/run.sh
    ports:
      - 8080:8080
    depends_on:
      - minio
      - hive-metastore

  minio:
    hostname: minio
    image: minio/minio
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./minio/data:/data
    env_file:
      - .env
    networks:
      - trino-ranger-demo

  spark-master:
    image: godzillafiw/spark:3.3
    # build:
    #   context: ./spark
    #   dockerfile: ./Dockerfile
    container_name: "spark-master"
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
    ports:
      - "7077:7077"
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    networks:
    - trino-ranger-demo

  spark-worker-1:
    image: docker.io/bitnami/spark:3.3
    container_name: "spark-worker-1"
    env_file:
      - .env
    depends_on:
      - spark-master
    networks:
      - trino-ranger-demo

  spark-worker-2:
    image: docker.io/bitnami/spark:3.3
    container_name: "spark-worker-2"
    env_file:
      - .env
    depends_on:
      - spark-master
    networks:
      - trino-ranger-demo

networks:
  trino-ranger-demo:
    driver: bridge

volumes:
  ranger-es-data:
  ranger-pg-data:
  mariadb-data:

